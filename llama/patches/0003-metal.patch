From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Michael Yang <mxyng@pm.me>
Date: Mon, 16 Sep 2024 15:53:12 -0700
Subject: [PATCH] metal

---
 ggml/src/ggml-metal/ggml-metal.m | 32 ++++++++++++++------------------
 1 file changed, 14 insertions(+), 18 deletions(-)

diff --git a/ggml/src/ggml-metal/ggml-metal.m b/ggml/src/ggml-metal/ggml-metal.m
index ae6b25ed..6656deb4 100644
--- a/ggml/src/ggml-metal/ggml-metal.m
+++ b/ggml/src/ggml-metal/ggml-metal.m
@@ -1930,27 +1930,23 @@ static void ggml_metal_encode_node(
                 // to the matrix-vector kernel
                 int ne11_mm_min = 4;
 
-#if 0
                 // the numbers below are measured on M2 Ultra for 7B and 13B models
                 // these numbers do not translate to other devices or model sizes
                 // TODO: need to find a better approach
-                        if ([device.name isEqualToString:@"Apple M2 Ultra"]) {
-                            switch (src0t) {
-                                case GGML_TYPE_F16:  ne11_mm_min = 2;  break;
-                                case GGML_TYPE_Q8_0: ne11_mm_min = 7;  break;
-                                case GGML_TYPE_Q2_K: ne11_mm_min = 15; break;
-                                case GGML_TYPE_Q3_K: ne11_mm_min = 7;  break;
-                                case GGML_TYPE_Q4_0:
-                                case GGML_TYPE_Q4_1: ne11_mm_min = 15; break;
-                                case GGML_TYPE_Q4_K: ne11_mm_min = 11; break;
-                                case GGML_TYPE_Q5_0:                          // not tested yet
-                                case GGML_TYPE_Q5_1: ne11_mm_min = 13; break; // not tested yet
-                                case GGML_TYPE_Q5_K: ne11_mm_min = 7;  break;
-                                case GGML_TYPE_Q6_K: ne11_mm_min = 7;  break;
-                                default:             ne11_mm_min = 1;  break;
-                            }
-                        }
-#endif
+                switch (src0t) {
+                    case GGML_TYPE_F16:  ne11_mm_min = 2;  break;
+                    case GGML_TYPE_Q8_0: ne11_mm_min = 7;  break;
+                    case GGML_TYPE_Q2_K: ne11_mm_min = 15; break;
+                    case GGML_TYPE_Q3_K: ne11_mm_min = 7;  break;
+                    case GGML_TYPE_Q4_0:
+                    case GGML_TYPE_Q4_1: ne11_mm_min = 15; break;
+                    case GGML_TYPE_Q4_K: ne11_mm_min = 11; break;
+                    case GGML_TYPE_Q5_0:                          // not tested yet
+                    case GGML_TYPE_Q5_1: ne11_mm_min = 13; break; // not tested yet
+                    case GGML_TYPE_Q5_K: ne11_mm_min = 7;  break;
+                    case GGML_TYPE_Q6_K: ne11_mm_min = 7;  break;
+                    default:             ne11_mm_min = 1;  break;
+                }
 
                 // for now the matrix-matrix multiplication kernel only works on A14+/M1+ SoCs
                 // AMD GPU and older A-chips will reuse matrix-vector multiplication kernel
